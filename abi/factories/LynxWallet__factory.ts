/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common.ts";
import type { LynxWallet, LynxWalletInterface } from "../LynxWallet.ts";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_eoa",
        type: "address",
      },
      {
        internalType: "address",
        name: "_executor",
        type: "address",
      },
      {
        internalType: "string",
        name: "_username1",
        type: "string",
      },
      {
        internalType: "string",
        name: "_username2",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "callData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "ret",
        type: "bytes",
      },
    ],
    name: "ExternalCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "eoa",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ResetEOA",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "spendingLimit",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "SpendingLimitUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "TwoFactorAuthMessageSubmitted",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "call",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eoa",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "isTwoFactorAuthenticated",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonEOASenderHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "sender",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "newEOA",
        type: "address",
      },
    ],
    name: "recoverEOA",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "send",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spendingLimitPerHandler",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "spendingLimit",
        type: "uint256",
      },
    ],
    name: "updateSpendingLimit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "username1",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "username1Hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "username2",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "username2Hash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c0604052670de0b6b3a76400006009553480156200001d57600080fd5b506040516200144a3803806200144a8339810160408190526200004091620001f4565b600080546001600160a01b0319166001600160a01b038681169190911790915583166080523360a052600162000077838262000313565b50600262000086828262000313565b5060016040516020016200009b9190620003df565b60408051601f19818403018152908290528051602091820120600355620000c69160029101620003df565b60408051601f1981840301815282825280516020918201206004819055600354828501528383015281518084038301815260609093019091528151910120600555506200045d92505050565b80516001600160a01b03811681146200012a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015757600080fd5b81516001600160401b03808211156200017457620001746200012f565b604051601f8301601f19908116603f011681019082821181831017156200019f576200019f6200012f565b81604052838152602092508683858801011115620001bc57600080fd5b600091505b83821015620001e05785820183015181830184015290820190620001c1565b600093810190920192909252949350505050565b600080600080608085870312156200020b57600080fd5b620002168562000112565b9350620002266020860162000112565b60408601519093506001600160401b03808211156200024457600080fd5b620002528883890162000145565b935060608701519150808211156200026957600080fd5b50620002788782880162000145565b91505092959194509250565b600181811c908216806200029957607f821691505b602082108103620002ba57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200030e57600081815260208120601f850160051c81016020861015620002e95750805b601f850160051c820191505b818110156200030a57828155600101620002f5565b5050505b505050565b81516001600160401b038111156200032f576200032f6200012f565b620003478162000340845462000284565b84620002c0565b602080601f8311600181146200037f5760008415620003665750858301515b600019600386901b1c1916600185901b1785556200030a565b600085815260208120601f198616915b82811015620003b0578886015182559484019460019091019084016200038f565b5085821015620003cf5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003ef8162000284565b600182811680156200040a5760018114620004205762000451565b60ff198416875282151583028701945062000451565b8760005260208060002060005b85811015620004485781548a8201529084019082016200042d565b50505082870194505b50929695505050505050565b60805160a051610fab6200049f60003960006108bb0152600081816102880152818161054d01528181610645015281816107ea015261098c0152610fab6000f3fe6080604052600436106100bd5760003560e01c8063af7b15e511610079578063d0679d3411610056578063d0679d34146101fb578063d16daaec1461021b578063d20e40ec1461023b578063e91fef0b1461025057005b8063af7b15e51461018d578063affed0e0146101c5578063c3f71119146101db57005b806316709b1e146100c65780632c98e243146100ef5780636dbf2fa0146101055780636e5d877a1461013257806373ad753d146101625780639c18f00e1461017757005b366100c457005b005b3480156100d257600080fd5b506100dc60035481565b6040519081526020015b60405180910390f35b3480156100fb57600080fd5b506100dc60045481565b34801561011157600080fd5b50610125610120366004610c34565b610266565b6040516100e69190610d4f565b34801561013e57600080fd5b5061015261014d366004610d62565b61043f565b60405190151581526020016100e6565b34801561016e57600080fd5b5061012561049f565b34801561018357600080fd5b506100dc60055481565b34801561019957600080fd5b506000546101ad906001600160a01b031681565b6040516001600160a01b0390911681526020016100e6565b3480156101d157600080fd5b506100dc60065481565b3480156101e757600080fd5b506101526101f6366004610dd4565b61052d565b34801561020757600080fd5b50610152610216366004610ded565b610625565b34801561022757600080fd5b50610152610236366004610e17565b6107dd565b34801561024757600080fd5b50610125610973565b34801561025c57600080fd5b506100dc60095481565b6000546060906001600160a01b03163314806102aa5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6102cf5760405162461bcd60e51b81526004016102c690610e43565b60405180910390fd5b60006102d9610980565b9050600954841115806103285750610328816000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109f292505050565b1561042657600080866001600160a01b031686866040516103499190610e63565b60006040518083038185875af1925050503d8060008114610386576040519150601f19603f3d011682016040523d82523d6000602084013e61038b565b606091505b5091509150816103cb5760405162461bcd60e51b815260206004820152600b60248201526a10d85b1b0819985a5b195960aa1b60448201526064016102c6565b85876001600160a01b0316306001600160a01b03167f0874b07387ebe82300e0ce8d226139788d7be6a72aaf496df7c9f9751624ca9b6000368660405161041493929190610e7f565b60405180910390a49250610438915050565b50506040805160008152602081019091525b9392505050565b60006007600061048485858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bd392505050565b81526020019081526020016000205460021490505b92915050565b600280546104ac90610ec7565b80601f01602080910402602001604051908101604052809291908181526020018280546104d890610ec7565b80156105255780601f106104fa57610100808354040283529160200191610525565b820191906000526020600020905b81548152906001019060200180831161050857829003601f168201915b505050505081565b600080546001600160a01b031633148061056f5750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b61058b5760405162461bcd60e51b81526004016102c690610e43565b6000610595610980565b90506105d8816000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109f292505050565b1561061a5760098390556040514290849030907fadc4fae0466f081fbc29f2ce143e643cf8216cdb5e320362ce39b953a5eeb56d90600090a450600192915050565b60009150505b919050565b600080546001600160a01b03163314806106675750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b6106835760405162461bcd60e51b81526004016102c690610e43565b600061068d610980565b9050600954831115806106dc57506106dc816000368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506109f292505050565b156107d357604080516000808252602082019092526001600160a01b03861690859060405161070b9190610e63565b60006040518083038185875af1925050503d8060008114610748576040519150601f19603f3d011682016040523d82523d6000602084013e61074d565b606091505b50509050806107905760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016102c6565b60405184906001600160a01b0387169030907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90600090a4600192505050610499565b5060009392505050565b6000336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108405760405162461bcd60e51b81526020600482015260066024820152650aadc82aaa8960d31b60448201526064016102c6565b604051697265636f766572454f4160b01b60208201526bffffffffffffffffffffffff19606084901b16602a82015261088c908490603e016040516020818303038152906040526109f2565b1561096a57600054604051638adcc5ad60e01b81526001600160a01b03918216600482015283821660248201527f000000000000000000000000000000000000000000000000000000000000000090911690638adcc5ad90604401600060405180830381600087803b15801561090157600080fd5b505af1158015610915573d6000803e3d6000fd5b5050600080546001600160a01b0319166001600160a01b038616908117825560405142945090925030917f67d4c54b09dc7018e8fc7860930400e8fdd41e6e0b6d2b472b43d4d228b51ceb91a4506001610499565b50600092915050565b600180546104ac90610ec7565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633036109b9575060055490565b6040516bffffffffffffffffffffffff193360601b16602082015260340160405160208183030381529060405280519060200120905090565b6000806109fe83610bd3565b905060008460065485604051602001610a1993929190610f01565b60408051601f1981840301815291815281516020928301206000818152600890935291205490915060ff1615610a855760405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e481cdd589b5a5d1d1959607a1b60448201526064016102c6565b6000818152600860209081526040808320805460ff191660019081179091558584526007909252909120549003610b1f576000828152600760209081526040918290206002908190559151848152879130917fd30d84b2c85153f2b134a892219d59403e4ca8dc52b45302006e2f8a06a02c22910160405180910390a4600654610b10906001610f2e565b60065550600191506104999050565b6000828152600760205260408120549003610b8b576000828152600760209081526040918290206001908190559151848152879130917fd30d84b2c85153f2b134a892219d59403e4ca8dc52b45302006e2f8a06a02c22910160405180910390a4600092505050610499565b60405162461bcd60e51b815260206004820152601860248201527f43616c6c20657865637574696f6e20636f6d706c65746564000000000000000060448201526064016102c6565b600060065482604051602001610bea929190610f4f565b604051602081830303815290604052805190602001209050919050565b80356001600160a01b038116811461062057600080fd5b634e487b7160e01b600052604160045260246000fd5b600080600060608486031215610c4957600080fd5b610c5284610c07565b925060208401359150604084013567ffffffffffffffff80821115610c7657600080fd5b818601915086601f830112610c8a57600080fd5b813581811115610c9c57610c9c610c1e565b604051601f8201601f19908116603f01168101908382118183101715610cc457610cc4610c1e565b81604052828152896020848701011115610cdd57600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60005b83811015610d1a578181015183820152602001610d02565b50506000910152565b60008151808452610d3b816020860160208601610cff565b601f01601f19169290920160200192915050565b6020815260006104386020830184610d23565b60008060208385031215610d7557600080fd5b823567ffffffffffffffff80821115610d8d57600080fd5b818501915085601f830112610da157600080fd5b813581811115610db057600080fd5b866020828501011115610dc257600080fd5b60209290920196919550909350505050565b600060208284031215610de657600080fd5b5035919050565b60008060408385031215610e0057600080fd5b610e0983610c07565b946020939093013593505050565b60008060408385031215610e2a57600080fd5b82359150610e3a60208401610c07565b90509250929050565b6020808252600690820152651193d490925160d21b604082015260600190565b60008251610e75818460208701610cff565b9190910192915050565b60408152826040820152828460608301376000606084830101526000601f19601f85011682016060838203016020840152610ebd6060820185610d23565b9695505050505050565b600181811c90821680610edb57607f821691505b602082108103610efb57634e487b7160e01b600052602260045260246000fd5b50919050565b83815282602082015260008251610f1f816040850160208701610cff565b91909101604001949350505050565b8082018082111561049957634e487b7160e01b600052601160045260246000fd5b82815260008251610f67816020850160208701610cff565b91909101602001939250505056fea26469706673582212208b181802fa296918baf8f71819d9bc218f2661fd6a65595a4f97585412c32eac64736f6c63430008130033";

type LynxWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LynxWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LynxWallet__factory extends ContractFactory {
  constructor(...args: LynxWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _eoa: PromiseOrValue<string>,
    _executor: PromiseOrValue<string>,
    _username1: PromiseOrValue<string>,
    _username2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LynxWallet> {
    return super.deploy(
      _eoa,
      _executor,
      _username1,
      _username2,
      overrides || {}
    ) as Promise<LynxWallet>;
  }
  override getDeployTransaction(
    _eoa: PromiseOrValue<string>,
    _executor: PromiseOrValue<string>,
    _username1: PromiseOrValue<string>,
    _username2: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _eoa,
      _executor,
      _username1,
      _username2,
      overrides || {}
    );
  }
  override attach(address: string): LynxWallet {
    return super.attach(address) as LynxWallet;
  }
  override connect(signer: Signer): LynxWallet__factory {
    return super.connect(signer) as LynxWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LynxWalletInterface {
    return new utils.Interface(_abi) as LynxWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LynxWallet {
    return new Contract(address, _abi, signerOrProvider) as LynxWallet;
  }
}
